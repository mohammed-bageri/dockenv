name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.24]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod download

    - name: Install development tools
      run: make install-tools

    - name: Run tests
      run: make test-unit

    - name: Run integration tests
      run: make test-integration

    - name: Generate coverage report
      run: make test-coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

    - name: Run static analysis
      run: make lint

    - name: Check code formatting
      run: make fmt && git diff --exit-code

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.24

    - name: Install dependencies
      run: go mod download

    - name: Build binary
      run: make build

    - name: Test binary
      run: |
        ./build/dockenv --version
        ./build/dockenv --help

    - name: Upload binary as artifact
      uses: actions/upload-artifact@v4
      with:
        name: dockenv-binary
        path: build/dockenv

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.24

    - name: Install development tools
      run: make install-tools

    - name: Run security analysis
      run: make security

    - name: Run govulncheck
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        $(go env GOPATH)/bin/govulncheck ./...
